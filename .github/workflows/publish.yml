name: Build and Deploy
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  prepare_release:
    name: Prepare release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M-%S')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          #body_path: CHANGELOG.md
          #body:
        env:
          TAG_NAME: release-${{ steps.date.outputs.date }}
          RELEASE_NAME: release-${{ steps.date.outputs.date }}
          GITHUB_TOKEN: ${{ github.token }}
          
      - id: step_upload_url
        name: Store Release upload URL for proceeding jobs
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"

  build_web:
    name: Build Web Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
          
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'dev'

      - name: Get Flutter Packages
        run: flutter pub get
      
      - name: Build Flutter Web target
        run: flutter build web
          
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.
          
  build_apk:
    name: Build Android Client
    runs-on: ubuntu-latest
    needs: prepare_release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Java Setup (?)
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
    
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
          
      - name: Get Flutter Packages
        run: flutter pub get
      
      - name: Build Flutter Android target
        run: flutter build apk
      
      - name: upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: android-release.apk
          asset_content_type: application/zip
          
  build_win:
    name: Build Windows Client
    runs-on: windows-latest
    needs: prepare_release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
          
      - name: Get Flutter Packages
        run: flutter pub get
      
      - name: Build Flutter Windows target
        run: |
            flutter config --enable-windows-desktop
            flutter build windows
      
      - name: Zip Windows release directory
        run: 7z a build\windows\runner\Release.zip build\windows\runner\Release\
      
      - name: Upload Windows Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: .\build\windows\runner\Release.zip
          asset_name: windows-release.zip
          asset_content_type: application/zip

  build_mac:
    name: Build Mac Client
    runs-on: macos-latest
    needs: prepare_release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'dev'

      - name: Get Flutter Packages
        run: flutter pub get

      - name: Build Flutter MacOS target
        run: |
          flutter config --enable-macos-desktop
          flutter build macos
          ls -a -R ./build/macos/Build/

      - name: Upload MacOS App
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./build/macos/Build/Products/Release/project_armoire.app
          asset_name: project_armoire.app
          asset_content_type: application/zip